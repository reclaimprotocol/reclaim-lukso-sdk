/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Reclaim, ReclaimInterface } from "../../contracts/Reclaim";

const _abi = [
  {
    inputs: [],
    name: "Reclaim__GroupAlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "Reclaim__UserAlreadyMerkelized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dappId",
        type: "bytes32",
      },
    ],
    name: "DappCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampEnd",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "string",
                name: "host",
                type: "string",
              },
            ],
            internalType: "struct Reclaim.Witness[]",
            name: "witnesses",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "minimumWitnessesForClaimCreation",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct Reclaim.Epoch",
        name: "epoch",
        type: "tuple",
      },
    ],
    name: "EpochAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "groupId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "provider",
        type: "string",
      },
    ],
    name: "GroupCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "host",
            type: "string",
          },
        ],
        internalType: "struct Reclaim.Witness[]",
        name: "witnesses",
        type: "tuple[]",
      },
      {
        internalType: "uint8",
        name: "requisiteWitnessesForClaimCreate",
        type: "uint8",
      },
    ],
    name: "addNewEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "createDapp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "provider",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "merkleTreeDepth",
        type: "uint256",
      },
    ],
    name: "createGroup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epochDurationS",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "epochs",
    outputs: [
      {
        internalType: "uint32",
        name: "id",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "timestampStart",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "timestampEnd",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "minimumWitnessesForClaimCreation",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "epoch",
        type: "uint32",
      },
    ],
    name: "fetchEpoch",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "id",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampStart",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "timestampEnd",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "addr",
                type: "address",
              },
              {
                internalType: "string",
                name: "host",
                type: "string",
              },
            ],
            internalType: "struct Reclaim.Witness[]",
            name: "witnesses",
            type: "tuple[]",
          },
          {
            internalType: "uint8",
            name: "minimumWitnessesForClaimCreation",
            type: "uint8",
          },
        ],
        internalType: "struct Reclaim.Epoch",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "epoch",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "identifier",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "timestampS",
        type: "uint32",
      },
    ],
    name: "fetchWitnessesForClaim",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "string",
            name: "host",
            type: "string",
          },
        ],
        internalType: "struct Reclaim.Witness[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "provider",
                type: "string",
              },
              {
                internalType: "string",
                name: "parameters",
                type: "string",
              },
              {
                internalType: "string",
                name: "context",
                type: "string",
              },
            ],
            internalType: "struct Claims.ClaimInfo",
            name: "claimInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "identifier",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "timestampS",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "epoch",
                    type: "uint32",
                  },
                ],
                internalType: "struct Claims.CompleteClaimData",
                name: "claim",
                type: "tuple",
              },
              {
                internalType: "bytes[]",
                name: "signatures",
                type: "bytes[]",
              },
            ],
            internalType: "struct Claims.SignedClaim",
            name: "signedClaim",
            type: "tuple",
          },
        ],
        internalType: "struct Reclaim.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "getContextAddressFromProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "provider",
                type: "string",
              },
              {
                internalType: "string",
                name: "parameters",
                type: "string",
              },
              {
                internalType: "string",
                name: "context",
                type: "string",
              },
            ],
            internalType: "struct Claims.ClaimInfo",
            name: "claimInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "identifier",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "timestampS",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "epoch",
                    type: "uint32",
                  },
                ],
                internalType: "struct Claims.CompleteClaimData",
                name: "claim",
                type: "tuple",
              },
              {
                internalType: "bytes[]",
                name: "signatures",
                type: "bytes[]",
              },
            ],
            internalType: "struct Claims.SignedClaim",
            name: "signedClaim",
            type: "tuple",
          },
        ],
        internalType: "struct Reclaim.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "getContextMessageFromProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "provider",
        type: "string",
      },
      {
        internalType: "string",
        name: "params",
        type: "string",
      },
    ],
    name: "getMerkelizedUserParams",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "provider",
                type: "string",
              },
              {
                internalType: "string",
                name: "parameters",
                type: "string",
              },
              {
                internalType: "string",
                name: "context",
                type: "string",
              },
            ],
            internalType: "struct Claims.ClaimInfo",
            name: "claimInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "identifier",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "timestampS",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "epoch",
                    type: "uint32",
                  },
                ],
                internalType: "struct Claims.CompleteClaimData",
                name: "claim",
                type: "tuple",
              },
              {
                internalType: "bytes[]",
                name: "signatures",
                type: "bytes[]",
              },
            ],
            internalType: "struct Claims.SignedClaim",
            name: "signedClaim",
            type: "tuple",
          },
        ],
        internalType: "struct Reclaim.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "getProviderFromProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_semaphoreAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "provider",
                type: "string",
              },
              {
                internalType: "string",
                name: "parameters",
                type: "string",
              },
              {
                internalType: "string",
                name: "context",
                type: "string",
              },
            ],
            internalType: "struct Claims.ClaimInfo",
            name: "claimInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "identifier",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "timestampS",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "epoch",
                    type: "uint32",
                  },
                ],
                internalType: "struct Claims.CompleteClaimData",
                name: "claim",
                type: "tuple",
              },
              {
                internalType: "bytes[]",
                name: "signatures",
                type: "bytes[]",
              },
            ],
            internalType: "struct Claims.SignedClaim",
            name: "signedClaim",
            type: "tuple",
          },
        ],
        internalType: "struct Reclaim.Proof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_identityCommitment",
        type: "uint256",
      },
    ],
    name: "merkelizeUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "semaphoreAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "provider",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_merkleTreeRoot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_signal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nullifierHash",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_externalNullifier",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dappId",
        type: "bytes32",
      },
      {
        internalType: "uint256[8]",
        name: "_proof",
        type: "uint256[8]",
      },
    ],
    name: "verifyMerkelIdentity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "string",
                name: "provider",
                type: "string",
              },
              {
                internalType: "string",
                name: "parameters",
                type: "string",
              },
              {
                internalType: "string",
                name: "context",
                type: "string",
              },
            ],
            internalType: "struct Claims.ClaimInfo",
            name: "claimInfo",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "bytes32",
                    name: "identifier",
                    type: "bytes32",
                  },
                  {
                    internalType: "address",
                    name: "owner",
                    type: "address",
                  },
                  {
                    internalType: "uint32",
                    name: "timestampS",
                    type: "uint32",
                  },
                  {
                    internalType: "uint32",
                    name: "epoch",
                    type: "uint32",
                  },
                ],
                internalType: "struct Claims.CompleteClaimData",
                name: "claim",
                type: "tuple",
              },
              {
                internalType: "bytes[]",
                name: "signatures",
                type: "bytes[]",
              },
            ],
            internalType: "struct Claims.SignedClaim",
            name: "signedClaim",
            type: "tuple",
          },
        ],
        internalType: "struct Reclaim.Proof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "verifyProof",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060601b60805234801561001757600080fd5b5060805160601c6139876100526000396000818161076d015281816107b601528181610e1001528181610e500152610ee301526139876000f3fe6080604052600436106101405760003560e01c8063715018a6116100b6578063a960e69e1161006f578063a960e69e146103c1578063c4d66de8146103e1578063c6b61e4c14610401578063e367fc6a14610451578063f2fde38b14610471578063f7da2ac91461049157600080fd5b8063715018a6146102e6578063739c6891146102fb578063766718081461032b57806379ffdb1d1461034f5780638925affe1461036f5780638da5cb5b1461038f57600080fd5b80633d3c3e07116101085780633d3c3e07146102235780634729504c146102505780634f1ef2861461027057806352d1902d146102835780635438243c146102a65780635ee4a99e146102c657600080fd5b806310abbe561461014557806317233a821461017b578063289989fd146101a85780632f087ec4146101e15780633659cfe614610201575b600080fd5b34801561015157600080fd5b50610165610160366004612e39565b6104b1565b6040516101729190613044565b60405180910390f35b34801561018757600080fd5b5061019b610196366004612da2565b610729565b60405161017291906130c0565b3480156101b457600080fd5b5060ca546101cc90600160a01b900463ffffffff1681565b60405163ffffffff9091168152602001610172565b3480156101ed57600080fd5b5061019b6101fc366004612da2565b610746565b34801561020d57600080fd5b5061022161021c366004612b80565b610762565b005b34801561022f57600080fd5b5061024361023e366004612e1f565b61084b565b60405161017291906131b6565b34801561025c57600080fd5b5061022161026b366004612be9565b610b7e565b61022161027e366004612b9c565b610e05565b34801561028f57600080fd5b50610298610ed6565b604051908152602001610172565b3480156102b257600080fd5b506102216102c1366004612e07565b610f89565b3480156102d257600080fd5b5061019b6102e1366004612da2565b515190565b3480156102f257600080fd5b5061022161105a565b34801561030757600080fd5b5061031b610316366004612c86565b61106e565b6040519015158152602001610172565b34801561033757600080fd5b5060ca546101cc90600160c01b900463ffffffff1681565b34801561035b57600080fd5b5061022161036a366004612dd4565b611097565b34801561037b57600080fd5b5061031b61038a366004612d1e565b61120a565b34801561039b57600080fd5b506097546001600160a01b03165b6040516001600160a01b039091168152602001610172565b3480156103cd57600080fd5b506102216103dc366004612da2565b6112ea565b3480156103ed57600080fd5b506102216103fc366004612b80565b61151d565b34801561040d57600080fd5b5061042161041c366004612e07565b611652565b6040805163ffffffff95861681529385166020850152919093169082015260ff9091166060820152608001610172565b34801561045d57600080fd5b5061022161046c366004612cdc565b61169e565b34801561047d57600080fd5b5061022161048c366004612b80565b6117aa565b34801561049d57600080fd5b5060ca546103a9906001600160a01b031681565b606060006104be8561084b565b905060006104ec856040516020016104d891815260200190565b604051602081830303815290604052611820565b6104fb8763ffffffff16611a45565b61050b846080015160ff16611a45565b61051a8763ffffffff16611a45565b60405160200161052d9493929190612f46565b60405160208183030381529060405290506000818051906020012060405160200161055a91815260200190565b60405160208183030381529060405290506000836060015190506000846080015160ff166001600160401b038111156105a357634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156105e957816020015b6040805180820190915260008152606060208201528152602001906001900390816105c15790505b5082519091506000805b876080015160ff168163ffffffff1610156107195760006106148784611b89565b905060006106228583613746565b905086818151811061064457634e487b7160e01b600052603260045260246000fd5b6020026020010151868463ffffffff168151811061067257634e487b7160e01b600052603260045260246000fd5b602090810291909101015260608a015161068d60018761362c565b815181106106ab57634e487b7160e01b600052603260045260246000fd5b60200260200101518782815181106106d357634e487b7160e01b600052603260045260246000fd5b602090810291909101015287516106eb85600461346f565b6106f59190613746565b935061070260018661362c565b94505050808061071190613722565b9150506105f3565b50919a9950505050505050505050565b80516040015160609061073f816000602a611c04565b9392505050565b60606000826000015160400151905061073f81602a8351611c04565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107b45760405162461bcd60e51b81526004016107ab906130d3565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107fd60008051602061390b833981519152546001600160a01b031690565b6001600160a01b0316146108235760405162461bcd60e51b81526004016107ab9061311f565b61082c81611cfa565b6040805160008082526020820190925261084891839190611d02565b50565b6040805160a081018252600080825260208201819052918101829052606080820152608081019190915263ffffffff8216610a0c5760c980546108909060019061362c565b815481106108ae57634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805160a0810182526003909402909101805463ffffffff80821686526401000000008204811686860152600160401b90910416848301526001810180548351818602810186019094528084529495919460608701949192909184015b828210156109ef576000848152602090819020604080518082019091526002850290910180546001600160a01b03168252600181018054929391929184019161095e906136cc565b80601f016020809104026020016040519081016040528092919081815260200182805461098a906136cc565b80156109d75780601f106109ac576101008083540402835291602001916109d7565b820191906000526020600020905b8154815290600101906020018083116109ba57829003601f168201915b50505050508152505081526020019060010190610916565b505050908252506002919091015460ff1660209091015292915050565b60c9610a19600184613643565b63ffffffff1681548110610a3d57634e487b7160e01b600052603260045260246000fd5b600091825260208083206040805160a0810182526003909402909101805463ffffffff80821686526401000000008204811686860152600160401b90910416848301526001810180548351818602810186019094528084529495919460608701949192909184015b828210156109ef576000848152602090819020604080518082019091526002850290910180546001600160a01b031682526001810180549293919291840191610aed906136cc565b80601f0160208091040260200160405190810160405280929190818152602001828054610b19906136cc565b8015610b665780601f10610b3b57610100808354040283529160200191610b66565b820191906000526020600020905b815481529060010190602001808311610b4957829003601f168201915b50505050508152505081526020019060010190610aa5565b610b86611e81565b60ca54600160a01b900463ffffffff16610bb25760ca805463ffffffff60a01b19166102a360a71b1790555b60c95415610c1b5760c98054429190610bcd9060019061362c565b81548110610beb57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020160000160086101000a81548163ffffffff021916908363ffffffff1602179055505b600160ca60188282829054906101000a900463ffffffff16610c3d9190613487565b825463ffffffff9182166101009390930a92830292820219169190911790915560c9805460018101825560009190915260ca805460039092027f66be4f155c5ef2ebd3772b228f2f00681e4ed5826cdb3b1943cc11ad15ad1d28018054428086166401000000000267ffffffffffffffff19909216600160c01b9095048616949094171781559054909350610cdb92600160a01b909104169061346f565b81546bffffffff00000000000000001916600160401b63ffffffff929092169190910217815560028101805460ff191660ff841617905560005b83811015610d8a5781600101858583818110610d4157634e487b7160e01b600052603260045260246000fd5b9050602002810190610d5391906133e0565b815460018101835560009283526020909220909160020201610d75828261379c565b50508080610d8290613707565b915050610d15565b5060c980547fb2a1462b8d912a9fe495da7a1188c48bb87bac4644a0931aa4ce2dd7017ce3659190610dbe9060019061362c565b81548110610ddc57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201604051610df79190613277565b60405180910390a150505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610e4e5760405162461bcd60e51b81526004016107ab906130d3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e9760008051602061390b833981519152546001600160a01b031690565b6001600160a01b031614610ebd5760405162461bcd60e51b81526004016107ab9061311f565b610ec682611cfa565b610ed282826001611d02565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f765760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016107ab565b5060008051602061390b83398151915290565b6040516bffffffffffffffffffffffff193360601b1660208201526034810182905260009060540160408051601f198184030181529181528151602092830120600081815260cf90935291205490915082141561101e5760405162461bcd60e51b81526020600482015260136024820152724461707020416c72656164792045786973747360681b60448201526064016107ab565b600081815260cf60205260408082208490555182917fe1ba945d9cf27531473738a81cb433321b8fccb7aa326b0dd4f820c23a6d277f91a25050565b611062611e81565b61106c6000611edb565b565b60008061107b8484611f2d565b600090815260ce602052604090205460ff169150505b92915050565b60cd5460ff16156110db5760405162461bcd60e51b815260206004820152600e60248201526d4e6f2072652d656e7472616e637960901b60448201526064016107ab565b60cd805460ff191660011790558151516000906110f790611f63565b835180516020909101519192506000916111119190611f2d565b600081815260ce602052604090205490915060ff161515600114156111495760405163fd2131a160e01b815260040160405180910390fd5b611152846112ea565b600082815260cb602052604090205460ff16151560011461117b5783515161117b90601461169e565b60ca54604051631783efc360e01b815260048101849052602481018590526001600160a01b0390911690631783efc390604401600060405180830381600087803b1580156111c857600080fd5b505af11580156111dc573d6000803e3d6000fd5b50505060009182525060ce60205260409020805460ff1990811660011790915560cd80549091169055505050565b600082815260cf6020526040812054841461125a5760405162461bcd60e51b815260206004820152601060248201526f11185c1c08139bdd0810dc99585d195960821b60448201526064016107ab565b600061126589611f63565b60ca54604051633bc778e360e01b81529192506001600160a01b031690633bc778e3906112a09084908c908c908c908c908b906004016133a4565b600060405180830381600087803b1580156112ba57600080fd5b505af19250505080156112cb575060015b6112d95760009150506112df565b60019150505b979650505050505050565b600081602001516020015151116113335760405162461bcd60e51b815260206004820152600d60248201526c4e6f207369676e61747572657360981b60448201526064016107ab565b60408051808201909152602080830180515183525181015190820152815160009061135d90611fb8565b60208401515151909150811461137257600080fd5b6020830151516060810151815160409092015160009261139292916104b1565b9050600061139f84611ffb565b905081518151146114105760405162461bcd60e51b815260206004820152603560248201527f4e756d626572206f66207369676e617475726573206e6f7420657175616c20746044820152746f206e756d626572206f66207769746e657373657360581b60648201526084016107ab565b60005b846020015151811015611515576000805b84518110156114b45784818151811061144d57634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b031684848151811061148257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156114a257600191506114b4565b806114ac81613707565b915050611424565b50806115025760405162461bcd60e51b815260206004820152601960248201527f5369676e6174757265206e6f7420617070726f7072696174650000000000000060448201526064016107ab565b508061150d81613707565b915050611413565b505050505050565b600054610100900460ff161580801561153d5750600054600160ff909116105b806115575750303b158015611557575060005460ff166001145b6115ba5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107ab565b6000805460ff1916600117905580156115dd576000805461ff0019166101001790555b6115e56120fe565b60ca80546001600160a01b0384166001600160e01b0319909116176102a360a71b1790558015610ed2576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60c9818154811061166257600080fd5b60009182526020909120600390910201805460029091015463ffffffff80831693506401000000008304811692600160401b9004169060ff1684565b60006116a983611f63565b600081815260cb602052604090205490915060ff161515600114156116e157604051638cdd92e960e01b815260040160405180910390fd5b60ca54604051639c11214160e01b815260048101839052602481018490523060448201526001600160a01b0390911690639c11214190606401600060405180830381600087803b15801561173457600080fd5b505af1158015611748573d6000803e3d6000fd5b505050600082815260cb602052604090819020805460ff191660011790555161177391508490612ea0565b6040519081900381209082907fa27df82d27a5b2a66bcd0c6210f8024283ed1197a6d8e30372f8df2e487c376e90600090a3505050565b6117b2611e81565b6001600160a01b0381166118175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ab565b61084881611edb565b606060008251600261183291906135ec565b6001600160401b0381111561185757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611881576020820181803683370190505b5060408051808201909152601081526f181899199a1a9b1b9c1cb0b131b232b360811b602082015290915060005b8451811015611a1b578182518683815181106118db57634e487b7160e01b600052603260045260246000fd5b01602001516118ed919060f81c6134cb565b8151811061190b57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916836119268360026135ec565b8151811061194457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535081825186838151811061197e57634e487b7160e01b600052603260045260246000fd5b0160200151611990919060f81c613746565b815181106119ae57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b031916836119c98360026135ec565b6119d490600161346f565b815181106119f257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535080611a1381613707565b9150506118af565b5081604051602001611a2d9190612fbf565b60405160208183030381529060405292505050919050565b606081611a695750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a935780611a7d81613707565b9150611a8c9050600a836134cb565b9150611a6d565b6000816001600160401b03811115611abb57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611ae5576020820181803683370190505b509050815b8515611b8057611afb60018261362c565b90506000611b0a600a886134cb565b611b1590600a6135ec565b611b1f908861362c565b611b2a9060306134a6565b905060008160f81b905080848481518110611b5557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350611b77600a896134cb565b97505050611aea565b50949350505050565b8151600090611b9983600461346f565b1115611bf55760405162461bcd60e51b815260206004820152602560248201527f4f6666736574202b2034206d7573742062652077697468696e206461746120626044820152646f756e647360d81b60648201526084016107ab565b50016004015163ffffffff1690565b6060836000611c13858561362c565b6001600160401b03811115611c3857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611c62576020820181803683370190505b509050845b84811015611cf057828181518110611c8f57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191682611ca9888461362c565b81518110611cc757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535080611ce881613707565b915050611c67565b5095945050505050565b610848611e81565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611d3a57611d358361212d565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d7357600080fd5b505afa925050508015611da3575060408051601f3d908101601f19168201909252611da091810190612c6e565b60015b611e065760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016107ab565b60008051602061390b8339815191528114611e755760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016107ab565b50611d358383836121c9565b6097546001600160a01b0316331461106c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ab565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000808383604051602001611f43929190612ebc565b60408051808303601f190181529190528051602090910120949350505050565b60008082905060008180519060200120604051602001611f8591815260200190565b60405160208183030381529060405290506000611faf8260048451611faa919061362c565b611b89565b95945050505050565b600080826000015183602001518460400151604051602001611fdc93929190612eeb565b60408051601f1981840301815291905280516020909101209392505050565b6060600061200c83600001516121f4565b905060008360200151516001600160401b0381111561203b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612064578160200160208202803683370190505b50905060005b8460200151518110156120f6576120ac838660200151838151811061209f57634e487b7160e01b600052603260045260246000fd5b602002602001015161226c565b8282815181106120cc57634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152806120ee81613707565b91505061206a565b509392505050565b600054610100900460ff166121255760405162461bcd60e51b81526004016107ab9061316b565b61106c6122b5565b6001600160a01b0381163b61219a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016107ab565b60008051602061390b83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6121d2836122e5565b6000825111806121df5750805b15611d35576121ee8383612325565b50505050565b606061221082600001516040516020016104d891815260200190565b61221d836020015161234a565b612230846040015163ffffffff16611a45565b612243856060015163ffffffff16611a45565b6040516020016122569493929190612f46565b6040516020818303038152906040529050919050565b6000806122798451611a45565b8460405160200161228b929190612fe9565b6040516020818303038152906040528051906020012090506122ad81846124cf565b949350505050565b600054610100900460ff166122dc5760405162461bcd60e51b81526004016107ab9061316b565b61106c33611edb565b6122ee8161212d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061073f838360405180606001604052806027815260200161392b602791396124eb565b60408051602880825260608281019093526000919060208201818036833701905050905060005b60148110156124a657600061238782601361362c565b6123929060086135ec565b61239d906002613544565b6123b0906001600160a01b0387166134cb565b60f81b9050600060108260f81c6123c791906134df565b60f81b905060008160f81c60106123de919061360b565b8360f81c6123ec9190613668565b60f81b90506123fa82612563565b856124068660026135ec565b8151811061242457634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061244481612563565b856124508660026135ec565b61245b90600161346f565b8151811061247957634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350505050808061249e90613707565b915050612371565b50806040516020016124b89190612fbf565b604051602081830303815290604052915050919050565b60008060006124de858561259e565b915091506120f6816125e4565b6060600080856001600160a01b0316856040516125089190612ea0565b600060405180830381855af49150503d8060008114612543576040519150601f19603f3d011682016040523d82523d6000602084013e612548565b606091505b50915091506125598683838761276a565b9695505050505050565b6000600a60f883901c101561258a5761258160f883901c60306134a6565b60f81b92915050565b61258160f883901c60576134a6565b919050565b6000808251604114156125d55760208301516040840151606085015160001a6125c9878285856127e0565b945094505050506125dd565b506000905060025b9250929050565b600081600481111561260657634e487b7160e01b600052602160045260246000fd5b141561260f5750565b600181600481111561263157634e487b7160e01b600052602160045260246000fd5b141561267f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016107ab565b60028160048111156126a157634e487b7160e01b600052602160045260246000fd5b14156126ef5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016107ab565b600381600481111561271157634e487b7160e01b600052602160045260246000fd5b14156108485760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016107ab565b606083156127d65782516127cf576001600160a01b0385163b6127cf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016107ab565b50816122ad565b6122ad83836128a4565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612817575060009050600361289b565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561286b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166128945760006001925092505061289b565b9150600090505b94509492505050565b8151156128b45781518083602001fd5b8060405162461bcd60e51b81526004016107ab91906130c0565b600082601f8301126128de578081fd5b813560206001600160401b03808311156128fa576128fa613786565b8260051b61290983820161343f565b8481528381019087850183890186018a1015612923578788fd5b8793505b868410156129605780358581111561293d578889fd5b61294b8b88838d010161296d565b84525060019390930192918501918501612927565b5098975050505050505050565b600082601f83011261297d578081fd5b81356001600160401b0381111561299657612996613786565b6129a9601f8201601f191660200161343f565b8181528460208386010111156129bd578283fd5b816020850160208301379081016020019190915292915050565b6000604082840312156129e8578081fd5b6129f06133f5565b905081356001600160401b0380821115612a0957600080fd5b9083019060608286031215612a1d57600080fd5b612a2561341d565b823582811115612a3457600080fd5b612a408782860161296d565b825250602083013582811115612a5557600080fd5b612a618782860161296d565b602083015250604083013582811115612a7957600080fd5b612a858782860161296d565b60408301525083526020840135915080821115612aa157600080fd5b50612aae84828501612aba565b60208301525092915050565b600081830360a0811215612acc578182fd5b612ad46133f5565b91506080811215612ae457600080fd5b50604051608081016001600160401b038282108183111715612b0857612b08613786565b816040528435835260208501359150612b20826138f5565b816020840152612b3260408601612b6c565b6040840152612b4360608601612b6c565b606084015291835260808401359180831115612b5e57600080fd5b5050612aae848285016128ce565b803563ffffffff8116811461259957600080fd5b600060208284031215612b91578081fd5b813561073f816138f5565b60008060408385031215612bae578081fd5b8235612bb9816138f5565b915060208301356001600160401b03811115612bd3578182fd5b612bdf8582860161296d565b9150509250929050565b600080600060408486031215612bfd578081fd5b83356001600160401b0380821115612c13578283fd5b818601915086601f830112612c26578283fd5b813581811115612c34578384fd5b8760208260051b8501011115612c48578384fd5b6020928301955093505084013560ff81168114612c63578182fd5b809150509250925092565b600060208284031215612c7f578081fd5b5051919050565b60008060408385031215612c98578182fd5b82356001600160401b0380821115612cae578384fd5b612cba8683870161296d565b93506020850135915080821115612ccf578283fd5b50612bdf8582860161296d565b60008060408385031215612cee578182fd5b82356001600160401b03811115612d03578283fd5b612d0f8582860161296d565b95602094909401359450505050565b60008060008060008060006101c080898b031215612d3a578586fd5b88356001600160401b03811115612d4f578687fd5b612d5b8b828c0161296d565b9850506020890135965060408901359550606089013594506080890135935060a0890135925089818a011115612d8f578182fd5b5060c08801905092959891949750929550565b600060208284031215612db3578081fd5b81356001600160401b03811115612dc8578182fd5b6122ad848285016129d7565b60008060408385031215612de6578182fd5b82356001600160401b03811115612dfb578283fd5b612d0f858286016129d7565b600060208284031215612e18578081fd5b5035919050565b600060208284031215612e30578081fd5b61073f82612b6c565b600080600060608486031215612e4d578081fd5b612e5684612b6c565b925060208401359150612e6b60408501612b6c565b90509250925092565b60008151808452612e8c8160208601602086016136a0565b601f01601f19169290920160200192915050565b60008251612eb28184602087016136a0565b9190910192915050565b60008351612ece8184602088016136a0565b835190830190612ee28183602088016136a0565b01949350505050565b60008451612efd8184602089016136a0565b600560f91b9083018181528551909190612f1e816001850160208a016136a0565b60019201918201528351612f398160028401602088016136a0565b0160020195945050505050565b60008551612f58818460208a016136a0565b600560f91b9083018181528651909190612f79816001850160208b016136a0565b600192019182018190528551612f96816002850160208a016136a0565b60029201918201528351612fb18160038401602088016136a0565b016003019695505050505050565b61060f60f31b815260008251612fdc8160028501602087016136a0565b9190910160020192915050565b7f19457468657265756d205369676e6564204d6573736167653a0a00000000000081526000835161302181601a8501602088016136a0565b83519083019061303881601a8401602088016136a0565b01601a01949350505050565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156130b257888303603f19018552815180516001600160a01b0316845287015187840187905261309f87850182612e74565b958801959350509086019060010161306a565b509098975050505050505050565b60208152600061073f6020830184612e74565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000602080835260c0830163ffffffff80865116838601528286015160408282168188015282818901511660608801526060880151925060a06080880152839150825180855260e08801925060e08160051b89010194508584019350865b8181101561325c5788860360df19018452845180516001600160a01b0316875287015187870184905261324984880182612e74565b9650509386019392860192600101613214565b5050505050608085015191506122ad60a085018360ff169052565b6000602080835260c08301845463ffffffff808216848701528082851c166040870152808260401c1660608701525050600180860160a0608087015282815480855260e08801915060e08160051b89010194508287528587209250865b818110156133815788860360df1901835283546001600160a01b0316865260408787015284840180548990613308816136cc565b8060408b015288821660008114613326576001811461333b57613368565b60ff19831660608c015260808b019350613368565b848d528b8d208d5b8381101561335f5781548d820160600152908b01908d01613343565b8c016060019450505b50919850505060029490940193509186019184016132d4565b5050505050613394600286015460ff1690565b60ff811660a086015291506122ad565b60006101a0820190508782528660208301528560408301528460608301528360808301526101008360a084013760008152979650505050505050565b60008235603e19833603018112612eb2578182fd5b604080519081016001600160401b038111828210171561341757613417613786565b60405290565b604051606081016001600160401b038111828210171561341757613417613786565b604051601f8201601f191681016001600160401b038111828210171561346757613467613786565b604052919050565b600082198211156134825761348261375a565b500190565b600063ffffffff808316818516808303821115612ee257612ee261375a565b600060ff821660ff84168060ff038211156134c3576134c361375a565b019392505050565b6000826134da576134da613770565b500490565b600060ff8316806134f2576134f2613770565b8060ff84160491505092915050565b600181815b8085111561353c5781600019048211156135225761352261375a565b8085161561352f57918102915b93841c9390800290613506565b509250929050565b600061073f838360008261355a57506001611091565b8161356757506000611091565b816001811461357d5760028114613587576135a3565b6001915050611091565b60ff8411156135985761359861375a565b50506001821b611091565b5060208310610133831016604e8410600b84101617156135c6575081810a611091565b6135d08383613501565b80600019048211156135e4576135e461375a565b029392505050565b60008160001904831182151516156136065761360661375a565b500290565b600060ff821660ff84168160ff04811182151516156135e4576135e461375a565b60008282101561363e5761363e61375a565b500390565b600063ffffffff838116908316818110156136605761366061375a565b039392505050565b600060ff821660ff8416808210156136825761368261375a565b90039392505050565b5b81811015610ed2576000815560010161368c565b60005b838110156136bb5781810151838201526020016136a3565b838111156121ee5750506000910152565b600181811c908216806136e057607f821691505b6020821081141561370157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561371b5761371b61375a565b5060010190565b600063ffffffff8083168181141561373c5761373c61375a565b6001019392505050565b60008261375557613755613770565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b81356137a7816138f5565b81546001600160a01b0319166001600160a01b0391909116178155600181810160208481013536869003601e190181126137e057600080fd5b850180356001600160401b038111156137f857600080fd5b803603838301131561380957600080fd5b61381384546136cc565b600080601f8411601f8411818117156138325760008981526020902092505b801561386057601f860160051c83018887101561384c5750825b61385e601f870160051c85018261368b565b505b5080600181146138965760009450851561387d5787848801013594505b600186901b600019600388901b1c1986161789556138e7565b601f198616945082845b868110156138bf578886018a0135825594890194908b019089016138a0565b50868610156138de5760001960f88860031b161c1989868a0101351681555b5089868b1b0189555b505050505050505050505050565b6001600160a01b038116811461084857600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206e2c510df222d6e3c0a59be6957cab34758b7f71d743dc42fddebff2a08e10ff64736f6c63430008040033";

type ReclaimConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReclaimConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Reclaim__factory extends ContractFactory {
  constructor(...args: ReclaimConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Reclaim> {
    return super.deploy(overrides || {}) as Promise<Reclaim>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Reclaim {
    return super.attach(address) as Reclaim;
  }
  override connect(signer: Signer): Reclaim__factory {
    return super.connect(signer) as Reclaim__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReclaimInterface {
    return new utils.Interface(_abi) as ReclaimInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Reclaim {
    return new Contract(address, _abi, signerOrProvider) as Reclaim;
  }
}
